syntax = "proto3";
package osmosis.poolmanager.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/poolmanager/v1beta1/module_route.proto";

option go_package = "github.com/osmosis-labs/osmosis/v17/x/poolmanager/types";

// Params holds parameters for the poolmanager module
message Params {
  repeated cosmos.base.v1beta1.Coin pool_creation_fee = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"pool_creation_fee\"",
    (gogoproto.nullable) = false
  ];
  string default_taker_fee = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.customname) = "DefaultTakerFee",
    (gogoproto.nullable) = false
  ];
  string stableswap_taker_fee = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.customname) = "StableswapTakerFee",
    (gogoproto.nullable) = false
  ];
  repeated CustomPoolTakerFee trading_pair_taker_fee = 4 [
    (gogoproto.customname) = "CustomPoolTakerFee",
    (gogoproto.nullable) = false
  ];
  TakerFeeDistributionPercentage osmo_taker_fee_distribution = 5 [
    (gogoproto.customname) = "OsmoTakerFeeDistribution",
    (gogoproto.nullable) = false
  ];
  TakerFeeDistributionPercentage non_osmo_taker_fee_distribution = 6 [
    (gogoproto.customname) = "NonOsmoTakerFeeDistribution",
    (gogoproto.nullable) = false
  ];
  // authorized_quote_denoms is a list of quote denoms that can be used as
  // token1 when creating a concentrated pool. We limit the quote assets to a
  // small set for the purposes of having convinient price increments stemming
  // from tick to price conversion. These increments are in a human readable
  // magnitude only for token1 as a quote. For limit orders in the future, this
  // will be a desirable property in terms of UX as to allow users to set limit
  // orders at prices in terms of token1 (quote asset) that are easy to reason
  // about.
  repeated string authorized_quote_denoms = 7
      [ (gogoproto.moretags) = "yaml:\"authorized_quote_denoms\"" ];
  // community_pool_denom_to_swap_non_whitelisted_assets_to is the denom that
  // taker fees that are not whitelisted will be swapped to when being sent to
  // the community pool.
  string community_pool_denom_to_swap_non_whitelisted_assets_to = 8
      [ (gogoproto.moretags) =
            "yaml:\"community_pool_denom_to_swap_non_whitelisted_assets_to\"" ];
}

// GenesisState defines the poolmanager module's genesis state.
message GenesisState {
  // the next_pool_id
  uint64 next_pool_id = 1;
  // params is the container of poolmanager parameters.
  Params params = 2 [ (gogoproto.nullable) = false ];
  // pool_routes is the container of the mappings from pool id to pool type.
  repeated ModuleRoute pool_routes = 3 [ (gogoproto.nullable) = false ];
}

// CustomPoolTakerFee defines a custom taker fee for a specific pool.
message CustomPoolTakerFee {
  uint64 pool_id = 1 [ (gogoproto.customname) = "PoolId" ];
  string taker_fee = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"taker_fee\"",
    (gogoproto.nullable) = false
  ];
}

// TakerFeeDistributionPercentage defines what percent of the taker fee category
// gets distributed to the available categories.
message TakerFeeDistributionPercentage {
  string staking_rewards = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"staking_rewards\"",
    (gogoproto.nullable) = false
  ];
  string community_pool = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"community_pool\"",
    (gogoproto.nullable) = false
  ];
}